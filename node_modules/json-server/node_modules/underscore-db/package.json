{
  "name": "underscore-db",
  "version": "0.9.0",
  "description": "Use JavaScript objects as databases",
  "main": "src/node.js",
  "scripts": {
    "test": "grunt test",
    "grunt": "grunt"
  },
  "author": {
    "name": "Typicode",
    "email": "typicode@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/typicode/underscore-db.git"
  },
  "keywords": [
    "JavaScript",
    "Underscore",
    "Lo-Dash",
    "lodash",
    "database",
    "datastore",
    "JSON",
    "object",
    "embed",
    "embeddable"
  ],
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-browserify": "^3.8.0",
    "grunt-cli": "~0.1.11",
    "grunt-contrib-jshint": "~0.7.2",
    "grunt-contrib-uglify": "^0.9.1",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-mocha-test": "~0.7.0",
    "lodash": "^3.9.3",
    "sinon": "~1.8.1",
    "underscore": "^1.8.3"
  },
  "readme": "# underscore-db [![Build Status](https://travis-ci.org/typicode/underscore-db.svg)](https://travis-ci.org/typicode/underscore-db) [![NPM version](https://badge.fury.io/js/underscore-db.svg)](http://badge.fury.io/js/underscore-db) [![Bower version](https://badge.fury.io/bo/underscore-db.svg)](http://badge.fury.io/bo/underscore-db)\n\n> Adds functions to Underscore/Lo-Dash for manipulating database-like objects.\n\nIt adds:\n* `getById`\n* `insert`\n* `updateById`\n* `updateWhere`\n* `removeById`\n* `removeWhere`\n* `save`\n* `load`\n* `createId`\n\nData can be persisted using the filesystem or localStorage.\n\n__[Live example](http://typicode.github.io/underscore-db/)__\n\n__Tip__ You can extend [LowDB](https://github.com/typicode/lowdb) with underscore-db.\n\n## Install\n\n__Node__\n\n```bash\n$ npm install underscore underscore-db\n```\n\n```javascript\nvar _   = require('underscore');\nvar _db = require('underscore-db');\n\n_.mixin(_db);\n```\n\n__Browser__\n\n```bash\n$ bower install underscore underscore-db\n```\n\n```html\n<script src=\"underscore.js\" type=\"text/javascript\"></script>\n<script src=\"underscore-db.js\" type=\"text/javascript\"></script>\n```\n\nTo use underscore-db with Lo-Dash, just replace `underscore` with `lodash`\n\n## Usage example\n\nCreate an empty database object\n\n```javascript\nvar db = {\n  posts: []\n}\n```\n\nCreate a post\n\n```javascript\nvar newPost = _.insert(db.posts, {title: 'foo'});\n```\n\nDisplay database `console.log(db)`\n\n```javascript\n{\n  posts: [\n    {title: \"foo\", id: \"5ca959c4-b5ab-4336-aa65-8a197b6dd9cb\"}\n  ]\n}\n```\n\nRetrieve post using underscore-db `get` or underscore `find` method\n\n```javascript\nvar post = _.getById(db.posts, newPost.id);\n\nvar post = _.find(db.posts, function(post) {\n  return post.title === 'foo'\n});\n```\n\nPersist\n\n```javascript\n_.save(db);\n```\n\n## API\n\nThe following database object is used in API examples.\n\n```javascript\nvar db = {\n  posts: [\n    {id: 1, body: 'one', published: false},\n    {id: 2, body: 'two', published: true}\n  ],\n  comments: [\n    {id: 1, body: 'foo', postId: 1},\n    {id: 2, body: 'bar', postId: 2}\n  ]\n}\n```\n\n__getById(collection, id)__\n\nFinds and returns document by id or undefined.\n\n```javascript\nvar post = _.getById(db.posts, 1);\n```\n\n__insert(collection, document)__\n\nAdds document to collection, sets an id and returns created document.\n\n```javascript\nvar post = _.insert(db.posts, {body: 'New post'});\n```\n\nIf the document has already an id, it will be used to insert or replace.\n\n```javascript\n_.insert(db.posts, {id: 1, body: 'New post'});\n_.insert(db.posts, {id: 1, title: 'New title'});\n_.getById(db.posts, 1) // {id: 1, title: 'New title'}\n```\n\n__updateById(collection, id, attrs)__\n\nFinds document by id, copies properties to it and returns updated document or undefined.\n\n```javascript\nvar post = _.updateById(db.posts, 1, {body: 'Updated body'});\n```\n\n__updateWhere(collection, whereAttrs, attrs)__\n\nFinds documents using `_.where`, updates documents and returns updated documents or an empty array.\n\n```javascript\n// Publish all unpublished posts\nvar posts = _.updateWhere(db.posts, {published: false}, {published: true});\n```\n\n__removeById(collection, id)__\n\nRemoves document from collection and returns it or undefined.\n\n```javascript\nvar comment = _.removeById(db.comments, 1);\n```\n\n__removeWhere(collection, whereAttrs)__\n\nRemoves documents from collection using `_.where` and returns removed documents or an empty array.\n\n```javascript\nvar comments = _.removeWhere(db.comments, {postId: 1});\n```\n\n__save(db, [destination])__\n\nPersists database using localStorage or filesystem. If no destination is specified it will save to `db` or `./db.json`.\n\n```javascript\n_.save(db);\n_.save(db, '/some/path/db.json');\n```\n\n__load([source])__\n\nLoads database from localStorage or filesystem. If no source is specified it will load from `db` or `./db.json`.\n\n```javascript\nvar db = _.load();\nvar db = _.load('/some/path/db.json');\n```\n\n__id__\n\nOverwrite it if you want to use another id property.\n\n```javascript\n_.id = '_id';\n```\n\n__createId(collectionName, doc)__\n\nCalled by underscore-db when a document is inserted. Overwrite it if you want to change id generation algorithm.\n\n```javascript\n_.createId = function(collectionName, doc) {\n  return collectionName + '-' + doc.name + '-' + _.random(1, 9999);\n}\n```\n\n## FAQ\n\n### How to query?\n\nEverything you need for querying is present in Underscore and Lo-Dash: `where`, ```find```, ```map```, ```reduce```, ```filter```, ```reject```, ```sortBy```, ```groupBy```, ```countBy```, ...\n\nSee http://underscorejs.org/ or http://lodash.com/docs.\n\nExample:\n\n```javascript\n// Using Underscore\nvar topFivePosts = _(db.posts)\n  .chain()\n  .where({published: true})\n  .sortBy(function(post) {\n     return post.views;\n   })\n  .first(5)\n  .value();\n\n// Using Lo-Dash\nvar topFivePosts = _(db.posts)\n  .where({published: true})\n  .sortBy('views')\n  .first(5)\n  .value();\n```\n\n### How to reduce file size?\n\nWith Lo-Dash, you can create optimal builds and include just what you need.\n\nMinimal build for underscore-db to work (~2kb min gzipped):\n\n```bash\n$ npm install -g lodash-cli\n$ lodash underscore include=find,where,clone,indexOf\n```\n\nFor more build options, see http://lodash.com/custom-builds.\n\n## Changelog\n\nSee details changes for each version in the [release notes](https://github.com/typicode/underscore-db/releases).\n\n## License\n\nunderscore-db is released under the MIT License.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/typicode/underscore-db/issues"
  },
  "_id": "underscore-db@0.9.0",
  "dist": {
    "shasum": "2704573219534bbe891174f24defa5d1dbfe2b5e"
  },
  "_from": "underscore-db@^0.9.0",
  "_resolved": "https://registry.npmjs.org/underscore-db/-/underscore-db-0.9.0.tgz"
}
