var jsonServer = require('../../json-server')

// Returns an Express server
var server = jsonServer.create()

// Set default middlewares (logger, static, cors and no-cache)
server.use(jsonServer.defaults)

// Create global file path variable
var multer = require('../../multer');
var upload = multer({ dest: 'uploads/' });
var mypath = "";

// Add custom routes

// Implement get route to accept VCF file uploads
server.post('/upload', upload.single('image'), function(req, res) {
             mypath = "";
	mypath += req.file.path;
	res.redirect("/confirmation.html")
})

// Parse VCF file and return extracted SNPs to client
server.get('/extractSNP', function(req, res) {
    var awk = require('../../awk');
    var fs = require('fs');
    var intercept = require("../../intercept-stdout");
    var captured_text = "";
    //Initialize standard output hook
    var unhook_intercept = intercept(function(txt) {
    captured_text += txt;
    });
    awkscript = fs.readFileSync( __dirname + '/awkString.awk');
    data = fs.readFileSync(mypath);
    awk(awkscript, data);
    //Terminate standard output hook
    unhook_intercept();
    fs.writeFile('rsIDs.txt',captured_text,'utf8' ,function(){
        res.download('rsIDs.txt')});
})

// Parse VCF file and return extracted genomic co-ordinates to client
server.get('/extractLoc', function(req, res) {
    var awk = require('../../awk');
    var fs = require('fs');
    var intercept = require("../../intercept-stdout");
    var captured_text = "";
    var unhook_intercept = intercept(function(txt) {
    captured_text += txt;
    });
    awkscript = fs.readFileSync( __dirname + '/awkString2.awk');
    data = fs.readFileSync(mypath);
    awk(awkscript, data);
    unhook_intercept();
    //Create callback to capture data before sending file to browser
    fs.writeFile('rsIDsPlus.txt',captured_text,'utf8' ,function(){
        res.download('rsIDsPlus.txt')});
})

// Returns an Express router
var router = jsonServer.router('JSONdbKeys.json')
server.use(router)

server.listen(3000)